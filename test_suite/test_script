#!/usr/bin/python
"""Copyright (c) 2008, 2009 Scott Kitterman <scott@kitterman.com>
This script is free software, and you may redistribute it and/or modify
it under the same terms as Python itself, so long as this copyright message
and disclaimer are retained in their original form.

IN NO EVENT SHALL THE AUTHOR BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF
THIS CODE, EVEN IF THE AUTHOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

THE AUTHOR SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE.  THE CODE PROVIDED HEREUNDER IS ON AN "AS IS" BASIS,
AND THERE IS NO OBLIGATION WHATSOEVER TO PROVIDE MAINTENANCE,
SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS."""


import subprocess
testsfile = open('tests', 'r')
configfiles = testsfile.readline()
configlist = configfiles.split(',')
for configs in configlist:
    print configs
    pipecmd = '../policyd-spf ' + configs
    p = subprocess.Popen(pipecmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE, shell=True, close_fds=True)
    (fi, fo) = (p.stdin, p.stdout)
    datafile = open('test_cases', 'r')
    case = []
    titles = []
    while 1:
        line = datafile.readline()
        if line[0] != '.':
            while 1:
                if line[0] == '#':
                    titles.append(line)
                else:
                    case.append(line)
                line = datafile.readline()
                if line == '\n': break
            case.append('\n')
        else: break
    fi.writelines(case)
    fi.close()
    result = fo.readlines()
    for resultline in result:
        if resultline != '\n':
            title = titles.pop(0)
            title = title[:len(title)-1]
            desiredline = testsfile.readline()
            desired = desiredline.split(' ')
            action = resultline.split(' ')
            actionstr = str(action[0])
            if str(desired[0]) == actionstr:
                pass
            else:
                if (actionstr[:12] == 'action=dunno' and str(desired[0]) == 'action=dunno') or (actionstr[:22] == 'action=mfrom_passed_sp' and str(desired[0]) == 'action=mfrom_passed_spf') or (actionstr[:21] == 'action=helo_passed_sp' and str(desired[0]) == 'action=helo_passed_spf'):
                    pass
                else:
                    print action[0], '- Fail - Expected', str(desired[0]), title, configs
    fo.close()
    desiredline = testsfile.readline()



